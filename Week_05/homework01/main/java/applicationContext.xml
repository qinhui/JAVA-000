<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">


    <context:component-scan base-package="com.jkdx.homework.week05.aop"></context:component-scan>


    <aop:aspectj-autoproxy expose-proxy="true"></aop:aspectj-autoproxy>



    <bean id="aopDoc" class="com.jkdx.homework.week05.aop.AopProject"></bean>

    <bean id="aopCm" class="com.jkdx.homework.week05.aop.AopAnn"></bean>

    <bean id="moduleA" class="com.jkdx.homework.week05.aop.Module">

        <property name="mName" value="建造模块"></property>

        <property name="mCode" value="JZ"></property>

    </bean>

    <bean id="moduleB" class="com.jkdx.homework.week05.aop.Module">

        <property name="mName" value="文档模块"></property>
        <property name="mCode" value="DOC"></property>

    </bean>

    <bean id="ZZP" class="com.jkdx.homework.week05.aop.Project">

        <property name="moduleList" >

            <list>

                <ref  bean="moduleA"></ref>
                <ref bean="moduleB"></ref>

            </list>

        </property>

    </bean>

    <bean class="com.jkdx.homework.week05.aop.ProjectImp" id="projectImp"></bean>

    <aop:config>

        <!--

 任意公共方法的执行：
　　　　execution(public * *(..))
　　任何一个以“set”开始的方法的执行：
　　　　execution(* set*(..))
　　AccountService 接口的任意方法的执行：
　　　　execution(* com.xyz.service.AccountService.*(..))
　　定义在service包里的任意方法的执行：
　　　　execution(* com.xyz.service.*.*(..))
　　定义在service包和所有子包里的任意类的任意方法的执行：
　　　　execution(* com.xyz.service..*.*(..))
　　定义在pointcutexp包和所有子包里的JoinPointObjP2类的任意方法的执行：
　　　　execution(* com.test.spring.aop.pointcutexp..JoinPointObjP2.*(..))")

　　在多个表达式之间使用 ||,or表示 或，使用 &&,and表示 与，！表示 非.例如：

  <aop:config>
　　　　<aop:pointcut id="pointcut" expression="(execution(* com.ccboy.dao..*.find*(..))) or (execution(* com.ccboy.dao..*.query*(..)))"/>
　　　　<aop:advisor advice-ref="jdbcInterceptor" pointcut-ref="pointcut" />
　　</aop:config>

 -->



        <aop:pointcut id="p1" expression="execution(* com.jkdx.homework.week05.aop.*.*(..))"></aop:pointcut>

        <aop:aspect ref="aopDoc">

            <!--<aop:around method="around" pointcut-ref="p1" />-->
            <!--<aop:before method="before" pointcut-ref="p1" /> &lt;!&ndash;前置通知&ndash;&gt;-->
            <aop:after-returning method="after" pointcut-ref="p1"/> <!--后置通知-->

        </aop:aspect>


    </aop:config>




</beans>




